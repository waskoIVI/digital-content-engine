swagger: '2.0'
info:
  version: '1.0'
  title: Digital Content Engine API Documentation
  description: "<h3>Welcome to the Digital Content Engine (DCE)!</h3>\n\nThe DCE is a Jahia content repository and RESTful API that delivers property and property-related information to a variety of consuming applications. As well, the DCE delivers content managed \"structured\" data \n\nCalls are facilitated using [Mashery API Services](https://www.mashery.com/).  All endpoints are only accessible over https and are located at https://api.vistana.com (https://api-qa.vistana.com for nonprod).\n\nMashery is used for endpoint authentication as well as rate limiting (by both queries per second and queries per day).\n\n## Base URLs\n\n##### Production:\n```\nhttps://api.vistana.com/dcm/{version}/{authtype}/{endpoint}\n```\n\n##### EXAMPLE\n```\nhttps://api.vistana.com/dcm/v1/oauth/properties\n```\n\n##### QA:\n```\nhttps://api-qa.vistana.com/coh/{version}/{authtype}/{endpoint}\n```\n\n##### EXAMPLE\n```\nhttps://api-qa.vistana.com/dcm/v1/oauth/properties\n```\n\n## Limits\nBy default api keys are limited to 10 queries per second with a maximum of 25000 requests per day.\n\n## Mashery\nFor more information on specific service details related to login, registration, and account updates. Please refer to the Vistana Mobile API Documentation. There you will find specific details on how to register your device and retrieve an OAuth token.\n\n### Mashery Responses\nSuccessful authentication to Mashery results in request being forwarded to configured endpoint.  Responses correspond to structures defined below.\n\nFailure to authenticate or exceeding rate limits result in the following:\n* 403 Invalid permissions to endpoint, bad `api_key` or `masheryAccessToken`:\n```\nHttpStatus: 403 Forbidden\nPOST https://api-qa.vistana.com/v1/oauth/testendpoint?api_key=[badapikey] HTTP/1.1\nHeaders:\n  X-Mashery-Error-Code: ERR_403_DEVELOPER_INACTIVE\n  Content-Type: text/xml\n  X-Mashery-Responder: prod-j-worker-us-east-1b-121.mashery.com\nBody: <h1>Developer Inactive</h1>\n```\n* 403 Developer Over Queries Per Second:\n```\nHttpStatus: 403 Forbidden\nPOST https://api-qa.vistana.com/v1/oauth/testendpoint?api_key=[apikey] HTTP/1.1\nHeaders:\n  X-Mashery-Error-Code: ERR_403_DEVELOPER_OVER_QPS\n  Content-Type: text/xml\n  X-Mashery-Responder: prod-j-worker-us-east-1b-121.mashery.com\nBody: <h1>Developer Over Qps</h1>\n```\n* 596 Service Not Found:\n```\nHttpStatus: 596\nPOST https://api-qa.vistana.com/v1/oauth/fakeendpoint?api_key=[apikey] HTTP/1.1\nHeaders:\n  X-Mashery-Error-Code: ERR_596_SERVICE_NOT_FOUND\n  Content-Type: text/xml\n  X-Mashery-Responder: prod-j-worker-us-east-1b-121.mashery.com\nBody: <h1>596 Service Not Found</h1>\n```\n* 504 Gateway Timeout (Request from endpoint timed out):\n```\nHttpStatus: 504\nPOST https://api-qa.vistana.com/v1/oauth/endpoint HTTP/1.1\nHeaders:\n  X-Mashery-Error-Code: ERR_504_GATEWAY_TIMEOUT\n  Content-Type: text/xml\n  X-Mashery-Responder: prod-j-worker-us-east-1b-121.mashery.com\nBody: <h1>504 Gateway Timeout</h1>\n```\n"
  contact:
    name: Michael Waskiewicz
    email: michael.waskiewicz@vistana.com
host: api.vistana.com
basePath: /dcm/v1/oauth
schemes:
  - https
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    name: api_key
    in: header
  OAuth2:
    type: oauth2
    flow: implicit
    authorizationUrl: 'https://api.vistana.com/v1/oauth/device'
    scopes:
      read: Grants read access
    description: |-
      ### OAuth Endpoints
      Requests follow OAuth 2.0 [implicit grant flow](http://oauthlib.readthedocs.io/en/latest/oauth2/grants/implicit.html). Tokens are generated via successful authentication through the login service.

      To access lower level services (labeled oauth-idp-lower or digital content manager) your device must be registered. You can register your device using the device registration service `/v1/oauth/device`. The user context associated to a device level mashery access token is the device id populated on device registration.

      A user level mashery access token is required to access anything OAuth-IDP (see `/v1/oauth/login`) in the Mobile API Documentation. The user context associated to a user level mashery access token is a string formatted as such: {user/guestprefix}:{userid}:{deviceid}:{mobileexternalid(if exists)}:{mobilevendorid(if exists)}. Use a user-level mashery access token for anything related to a particular log in.

      Mashery persists a user context (generated by idp) as part of a successful login. This user context is directly associated to the generated OAuth Access Token. Upon successfully validating a mashery access token, Mashery will inject the associated user context into the request for the endpoint to parse. This allows the endpoint to identify users by access tokens.

      Some services modify data potentially part of the user context. It's the service's responsibility to also update the user context.

      ```
      POST https://api-qa.vistana.com/v1/oauth/login
      Headers:
        Authorization: Bearer [DEVICE_MASHERY_ACCESS_TOKEN]
      ```

      ### Register Device
      Endpoints expect `api_key` in header.
      ```
      POST https://api-qa.vistana.com/v1/oauth/device
      Headers:
        api_key: [API_KEY_HERE]
      ```
security:
  - OAuth2: []
paths:
  /properties:
    get:
      summary: Properties â€” All
      description: |
        Returns a full "properties" object.

        **EXAMPLE ENDPOINT:**

        https://api.vistana.com/dcm/v1/oauth/properties
      parameters:
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: limit
          type: string
          description: 'Set **?limit={integer}** to limit the number of results of a request. This is useful for pagination.'
        - in: query
          name: offset
          type: string
          description: 'Set **?offset={integer}** to get results of a particular page/offset of a request. This is useful for pagination.'
        - in: query
          name: sort
          type: string
          description: 'Use **?sort={fieldName}** when you want to do a data field sort on a result set. This featured only works with non-object data.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
        - type: string
          in: header
          name: api_key
          description: ''
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                uniqueItems: true
                minItems: 1
                maxItems: 50
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    name:
                      type: string
                    slug:
                      type: string
                    code:
                      type: string
                    propertyID:
                      type: string
                    propertyIDSun:
                      type: string
                    marshaCode:
                      type: string
                    resourceId:
                      type: string
                    type:
                      type: string
                    brand:
                      $ref: '#/definitions/brand'
                    phoneMain:
                      type: string
                    phoneOwnerServices:
                      type: string
                    phoneFax:
                      type: string
                    checkIn:
                      type: string
                    checkOut:
                      type: string
                    locale:
                      $ref: '#/definitions/locale'
                    sublocale:
                      $ref: '#/definitions/locale'
                    greeting:
                      type: string
                    propertyURL:
                      type: string
                    description:
                      type: string
                    featured:
                      type: boolean
                    address1:
                      type: string
                    address2:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zip:
                      type: string
                    territory:
                      type: string
                    country:
                      type: string
                    coordinateLongitude:
                      type: string
                    coordinateLatitude:
                      type: string
                    persona:
                      $ref: '#/definitions/persona'
                    facebook:
                      type: string
                    twitter:
                      type: string
                    pinterest:
                      type: string
                    youtube:
                      type: string
                    instagram:
                      type: string
                    tripadvisor:
                      type: string
                    referenceStaff:
                      $ref: '#/definitions/referenceStaff'
                    marriottData:
                      $ref: '#/definitions/marriott'
                    announcements:
                      type: object
                      properties:
                        specialConditions:
                          type: array
                          items:
                            type: object
                            properties:
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              displayFrom:
                                type: string
                              shortDescription:
                                type: string
                              descriptiveText:
                                type: string
                    policies:
                      type: object
                      properties:
                        smokeFree:
                          type: boolean
                        petsAllowed:
                          type: boolean
                        internetPolicy:
                          type: boolean
                        checkInTime:
                          type: string
                        videoBillReview:
                          type: boolean
                        daysFolioAvailableOnline:
                          type: boolean
                        expressCheckIn:
                          type: boolean
                        videoCheckOut:
                          type: boolean
                        checkOutTime:
                          type: string
                        expressCheckOut:
                          type: boolean
                        infoPolicies:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              typeName:
                                type: string
                              description:
                                type: string
                    accessibility:
                      type: object
                      properties:
                        accessibleGuestRoom:
                          type: array
                          items:
                            type: string
                        accessiblePublicSpaces:
                          type: array
                          items:
                            type: string
                    announcementsOverride:
                      type: string
                    policiesOverride:
                      type: string
                    accessibilityOverride:
                      type: string
                    purchaseDisclaimer:
                      type: string
                    termsConditions:
                      type: string
                    lastModified:
                      type: string
                    openGraphTitle:
                      type: string
                    openGraphDescription:
                      type: string
                    openGraphImage:
                      $ref: '#/definitions/images'
                    twitterTitle:
                      type: string
                    twitterDescription:
                      type: string
                    twitterImage:
                      $ref: '#/definitions/images'
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
                  required:
                    - nodename
                    - name
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '204':
          description: No Content
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '206':
          description: Partial Content
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/properties/{propertyid}':
    get:
      summary: Properties â€” Single Property
      description: |
        Returns a specific property object.

        **EXAMPLE ENDPOINTS:**

        https://api.vistana.com/dcm/v1/oauth/properties/svv

        https://api.vistana.com/dcm/v1/oauth/properties/code:svv

        https://api.vistana.com/dcm/v1/oauth/properties/15

        https://api.vistana.com/dcm/v1/oauth/properties/propertyIDSun:15

        https://api.vistana.com/dcm/v1/oauth/properties/propertyID:5607

        https://api.vistana.com/dcm/v1/oauth/properties/marshaCode:MCOLS
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the **code** or **propertyIDSun**, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID:5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: query
          name: metas-only
          type: boolean
          default: false
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                uniqueItems: true
                minItems: 1
                maxItems: 50
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    name:
                      type: string
                    slug:
                      type: string
                    code:
                      type: string
                    propertyID:
                      type: string
                    propertyIDSun:
                      type: string
                    marshaCode:
                      type: string
                    resourceId:
                      type: string
                    type:
                      type: string
                    brand:
                      $ref: '#/definitions/brand'
                    phoneMain:
                      type: string
                    phoneOwnerServices:
                      type: string
                    phoneFax:
                      type: string
                    checkIn:
                      type: string
                    checkOut:
                      type: string
                    locale:
                      $ref: '#/definitions/locale'
                    sublocale:
                      $ref: '#/definitions/locale'
                    greeting:
                      type: string
                    propertyURL:
                      type: string
                    description:
                      type: string
                    featured:
                      type: boolean
                    address1:
                      type: string
                    address2:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zip:
                      type: string
                    territory:
                      type: string
                    country:
                      type: string
                    coordinateLongitude:
                      type: string
                    coordinateLatitude:
                      type: string
                    persona:
                      $ref: '#/definitions/persona'
                    facebook:
                      type: string
                    twitter:
                      type: string
                    pinterest:
                      type: string
                    youtube:
                      type: string
                    instagram:
                      type: string
                    tripadvisor:
                      type: string
                    referenceStaff:
                      $ref: '#/definitions/referenceStaff'
                    marriottData:
                      $ref: '#/definitions/marriott'
                    announcements:
                      type: object
                      properties:
                        specialConditions:
                          type: array
                          items:
                            type: object
                            properties:
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              displayFrom:
                                type: string
                              shortDescription:
                                type: string
                              descriptiveText:
                                type: string
                    policies:
                      type: object
                      properties:
                        smokeFree:
                          type: boolean
                        petsAllowed:
                          type: boolean
                        internetPolicy:
                          type: boolean
                        checkInTime:
                          type: string
                        videoBillReview:
                          type: boolean
                        daysFolioAvailableOnline:
                          type: boolean
                        expressCheckIn:
                          type: boolean
                        videoCheckOut:
                          type: boolean
                        checkOutTime:
                          type: string
                        expressCheckOut:
                          type: boolean
                        infoPolicies:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              typeName:
                                type: string
                              description:
                                type: string
                    accessibility:
                      type: object
                      properties:
                        accessibleGuestRoom:
                          type: array
                          items:
                            type: string
                        accessiblePublicSpaces:
                          type: array
                          items:
                            type: string
                    announcementsOverride:
                      type: string
                    policiesOverride:
                      type: string
                    accessibilityOverride:
                      type: string
                    purchaseDisclaimer:
                      type: string
                    termsConditions:
                      type: string
                    lastModified:
                      type: string
                    openGraphTitle:
                      type: string
                    openGraphDescription:
                      type: string
                    openGraphImage:
                      $ref: '#/definitions/images'
                    twitterTitle:
                      type: string
                    twitterDescription:
                      type: string
                    twitterImage:
                      $ref: '#/definitions/images'
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
                  required:
                    - nodename
                    - name
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '206':
          description: Partial Content
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/properties/{propertyid}/activities':
    get:
      summary: "Activities â€”\_All"
      description: |
        Returns an activities list for a specific property.

        **EXAMPLE ENDPOINT:**

        https://api.vistana.com/dcm/v1/oauth/properties/wkorv/activities
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: limit
          type: string
          description: 'Set **?limit={integer}** to limit the number of results of a request. This is useful for pagination.'
        - in: query
          name: offset
          type: string
          description: 'Set **?offset={integer}** to get results of a particular page/offset of a request. This is useful for pagination.'
        - in: query
          name: sort
          type: string
          description: 'Use **?sort={fieldName}** when you want to do a data field sort on a result set. This featured only works with non-object data.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    shortDescription:
                      type: string
                    phone:
                      type: string
                    icon:
                      type: string
                    googlePlaceId:
                      type: string
                    referenceProperty:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      items:
                        type: string
                    activityType:
                      type: string
                    activityCategories:
                      type: object
                      properties:
                        nodename:
                          type: string
                        name:
                          type: string
                    description:
                      type: string
                    featured:
                      type: boolean
                    priority:
                      type: string
                    priorityOverride:
                      type: string
                    openGraphTitle:
                      type: string
                    openGraphDescription:
                      type: string
                    openGraphImage:
                      $ref: '#/definitions/images'
                    twitterTitle:
                      type: string
                    twitterDescription:
                      type: string
                    twitterImage:
                      $ref: '#/definitions/images'
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
                    tags:
                      $ref: '#/definitions/ugctags'
                    recommendations:
                      $ref: '#/definitions/recommendations'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '204':
          description: No Content
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/properties/{propertyid}/activities/{nodename}':
    get:
      summary: "Activities â€”\_Single Activity Detail"
      description: "Returns activity information for a specific property.\n\n**EXAMPLE ENDPOINT:** \n\nhttps://api.vistana.com/dcm/v1/oauth/properties/wkorv/activities/swimming-with-dolphins\n\nhttps://api.vistana.com/dcm/v1/oauth/properties/wkorv/activities/9386dde8-b382-4d90-81c0-2f6cb624e112"
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: path
          name: nodename
          type: string
          required: true
          description: |
            AKA Detail. This parameter gives you the full detail of a specific activity.
            - **Pattern:** `^[-0-9A-Za-z]+$` OR UUID (resourceId)
            - **Case:** Insensitive
            - **Example:** swimming-with-dolphins
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    shortDescription:
                      type: string
                    phone:
                      type: string
                    icon:
                      type: string
                    googlePlaceId:
                      type: string
                    referenceProperty:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      items:
                        type: string
                    activityType:
                      type: string
                    activityCategories:
                      type: object
                      properties:
                        nodename:
                          type: string
                        name:
                          type: string
                    description:
                      type: string
                    featured:
                      type: boolean
                    priority:
                      type: string
                    priorityOverride:
                      type: string
                    openGraphTitle:
                      type: string
                    openGraphDescription:
                      type: string
                    openGraphImage:
                      $ref: '#/definitions/images'
                    twitterTitle:
                      type: string
                    twitterDescription:
                      type: string
                    twitterImage:
                      $ref: '#/definitions/images'
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
                    tags:
                      $ref: '#/definitions/ugctags'
                    recommendations:
                      $ref: '#/definitions/recommendations'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/properties/{propertyid}/amenities':
    get:
      summary: "Amenities â€”\_All"
      description: |
        This endpoint will return all amenities for a given property. The response from this endpoint should be cached by the application.

        **EXAMPLE ENDPOINT:**

        https://api.vistana.com/dcm/v1/oauth/properties/svv/amenities
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: limit
          type: string
          description: 'Set **?limit={integer}** to limit the number of results of a request. This is useful for pagination.'
        - in: query
          name: offset
          type: string
          description: 'Set **?offset={integer}** to get results of a particular page/offset of a request. This is useful for pagination.'
        - in: query
          name: sort
          type: string
          description: 'Use **?sort={fieldName}** when you want to do a data field sort on a result set. This featured only works with non-object data.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    shortTitle:
                      type: string
                    icon:
                      type: string
                    referenceProperty:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                      minItems: 1
                    description:
                      type: string
                    featured:
                      type: boolean
                    priority:
                      type: string
                    priorityOverride:
                      type: string
                    openGraphTitle:
                      type: string
                    openGraphDescription:
                      type: string
                    openGraphImage:
                      $ref: '#/definitions/images'
                    twitterTitle:
                      type: string
                    twitterDescription:
                      type: string
                    twitterImage:
                      $ref: '#/definitions/images'
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '204':
          description: No Content
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/properties/{propertyid}/amenities/{nodename}':
    get:
      summary: "Amenities â€”\_Single Amenity Detail"
      description: |
        Returns a specific amenity for a specific property.

        **EXAMPLE ENDPOINT:**

        https://api.vistana.com/dcm/v1/oauth/properties/svv/amenities/swimming-pool
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: path
          name: nodename
          type: string
          required: true
          description: |
            AKA Detail. This parameter gives you the full detail of a specific amenity.
            - **Pattern:** `^[-0-9A-Za-z]+$`
            - **Case:** Insensitive
            - **Example:** club-pool
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    shortTitle:
                      type: string
                    icon:
                      type: string
                    referenceProperty:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                      minItems: 1
                    description:
                      type: string
                    featured:
                      type: boolean
                    priority:
                      type: string
                    priorityOverride:
                      type: string
                    openGraphTitle:
                      type: string
                    openGraphDescription:
                      type: string
                    openGraphImage:
                      $ref: '#/definitions/images'
                    twitterTitle:
                      type: string
                    twitterDescription:
                      type: string
                    twitterImage:
                      $ref: '#/definitions/images'
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/properties/{propertyid}/awards':
    get:
      summary: "Awards â€”\_All"
      description: "Returns all awards for a specific property.\n\n**EXAMPLE ENDPOINT:** \n\nhttps://api.vistana.com/dcm/v1/oauth/properties/svv/awards\n"
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: limit
          type: string
          description: 'Set **?limit={integer}** to limit the number of results of a request. This is useful for pagination.'
        - in: query
          name: offset
          type: string
          description: 'Set **?offset={integer}** to get results of a particular page/offset of a request. This is useful for pagination.'
        - in: query
          name: sort
          type: string
          description: 'Use **?sort={fieldName}** when you want to do a data field sort on a result set. This featured only works with non-object data.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    awardLink:
                      type: string
                    referenceProperty:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                      minItems: 1
                    description:
                      type: string
                    featured:
                      type: boolean
                    priority:
                      type: string
                    priorityOverride:
                      type: string
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '204':
          description: No Content
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/properties/{propertyid}/awards/{nodename}':
    get:
      summary: "Awards â€”\_Single Award Detail"
      description: |
        Returns a specific award for a specific property.

        **EXAMPLE ENDPOINT:**

        https://api.vistana.com/dcm/v1/oauth/properties/SVV/awards/tripadvisor-award
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: path
          name: nodename
          type: string
          required: true
          description: |
            Returns award details for a specific property.
            - **Pattern:** `^[-0-9A-Za-z]+$`
            - **Case:** Insensitive
            - **Example:** international-airport
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    awardLink:
                      type: string
                    referenceProperty:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                      minItems: 1
                    description:
                      type: string
                    featured:
                      type: boolean
                    priority:
                      type: string
                    priorityOverride:
                      type: string
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/properties/{propertyid}/dining':
    get:
      summary: "Dining â€”\_All"
      description: |
        Returns all dining objects for a specific property.

        **EXAMPLE ENDPOINT:**

        https://api.vistana.com/dcm/v1/oauth/properties/svv/dining
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: limit
          type: string
          description: 'Set **?limit={integer}** to limit the number of results of a request. This is useful for pagination.'
        - in: query
          name: offset
          type: string
          description: 'Set **?offset={integer}** to get results of a particular page/offset of a request. This is useful for pagination.'
        - in: query
          name: sort
          type: string
          description: 'Use **?sort={fieldName}** when you want to do a data field sort on a result set. This featured only works with non-object data.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    hours:
                      type: string
                    urlWeb:
                      type: string
                    urlMenu:
                      type: string
                    typeCusine:
                      type: string
                    typeAtmosphere:
                      type: string
                    googlePlaceId:
                      type: string
                    typeOnOffSite:
                      type: string
                    referenceProperty:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      items:
                        type: string
                    referenceStaff:
                      $ref: '#/definitions/referenceStaff'
                    description:
                      type: string
                    featured:
                      type: boolean
                    priority:
                      type: string
                    priorityOverride:
                      type: string
                    address1:
                      type: string
                    address2:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zip:
                      type: string
                    country:
                      type: string
                    territory:
                      type: string
                    coordinateLongitude:
                      type: string
                    coordinateLatitude:
                      type: string
                    openGraphTitle:
                      type: string
                    openGraphDescription:
                      type: string
                    openGraphImage:
                      $ref: '#/definitions/images'
                    twitterTitle:
                      type: string
                    twitterDescription:
                      type: string
                    twitterImage:
                      $ref: '#/definitions/images'
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
                    tags:
                      $ref: '#/definitions/ugctags'
                    recommendations:
                      $ref: '#/definitions/recommendations'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '204':
          description: No Content
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/properties/{propertyid}/dining/{nodename}':
    get:
      summary: "Dining â€”\_Single Dining Detail"
      description: |
        Returns a specific dining object for a specific property.

        **EXAMPLE ENDPOINT:**

        https://api.vistana.com/dcm/v1/oauth/properties/wkorv/dining/pulehu-grill
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: path
          name: nodename
          type: string
          required: true
          description: |
            AKA Detail. This parameter gives you the full detail of a specific
            dining option.
            - **Pattern:** `^[-0-9A-Za-z]+$`
            - **Case:** Insensitive
            - **Example:** hot-dog-heaven
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    hours:
                      type: string
                    urlWeb:
                      type: string
                    urlMenu:
                      type: string
                    typeCusine:
                      type: string
                    typeAtmosphere:
                      type: string
                    googlePlaceId:
                      type: string
                    typeOnOffSite:
                      type: string
                    referenceProperty:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                      minItems: 1
                    referenceStaff:
                      $ref: '#/definitions/referenceStaff'
                    description:
                      type: string
                    featured:
                      type: boolean
                    priority:
                      type: string
                    priorityOverride:
                      type: string
                    address1:
                      type: string
                    address2:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zip:
                      type: string
                    country:
                      type: string
                    territory:
                      type: string
                    coordinateLongitude:
                      type: string
                    coordinateLatitude:
                      type: string
                    openGraphTitle:
                      type: string
                    openGraphDescription:
                      type: string
                    openGraphImage:
                      $ref: '#/definitions/images'
                    twitterTitle:
                      type: string
                    twitterDescription:
                      type: string
                    twitterImage:
                      $ref: '#/definitions/images'
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
                    tags:
                      $ref: '#/definitions/ugctags'
                    recommendations:
                      $ref: '#/definitions/recommendations'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/properties/{propertyid}/places':
    get:
      summary: "Places â€”\_All"
      description: |
        Returns all place for a specific property.

        **EXAMPLE ENDPOINT:**

        https://api.vistana.com/dcm/v1/oauth/properties/svv/places
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: limit
          type: string
          description: 'Set **?limit={integer}** to limit the number of results of a request. This is useful for pagination.'
        - in: query
          name: offset
          type: string
          description: 'Set **?offset={integer}** to get results of a particular page/offset of a request. This is useful for pagination.'
        - in: query
          name: sort
          type: string
          description: 'Use **?sort={fieldName}** when you want to do a data field sort on a result set. This featured only works with non-object data.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    icon:
                      type: string
                    fullAddress:
                      type: string
                    referenceProperty:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                      minItems: 1
                    description:
                      type: string
                    featured:
                      type: boolean
                    priority:
                      type: string
                    priorityOverride:
                      type: string
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '204':
          description: ''
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/properties/{propertyid}/places/{nodename}':
    get:
      summary: "Places â€”\_Single Place Detail"
      description: |
        Returns a specific place for a specific property.

        **EXAMPLE ENDPOINT:**

        https://api.vistana.com/dcm/v1/oauth/properties/svv/places/international-airport
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: path
          name: nodename
          type: string
          required: true
          description: |
            AKA Detail. This parameter gives you the full detail of a specific
            amenity.
            - **Pattern:** `^[-0-9A-Za-z]+$`
            - **Case:** Insensitive
            - **Example:** international-airport
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    icon:
                      type: string
                    fullAddress:
                      type: string
                    referenceProperty:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                      minItems: 1
                    description:
                      type: string
                    featured:
                      type: boolean
                    priority:
                      type: string
                    priorityOverride:
                      type: string
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/properties/{propertyid}/phases':
    get:
      summary: "Phases â€”\_All"
      description: |
        Returns all place for a specific property.

        **EXAMPLE ENDPOINT:**

        https://api.vistana.com/dcm/v1/oauth/properties/svv/phases
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: limit
          type: string
          description: 'Set **?limit={integer}** to limit the number of results of a request. This is useful for pagination.'
        - in: query
          name: offset
          type: string
          description: 'Set **?offset={integer}** to get results of a particular page/offset of a request. This is useful for pagination.'
        - in: query
          name: sort
          type: string
          description: 'Use **?sort={fieldName}** when you want to do a data field sort on a result set. This featured only works with non-object data.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    referenceProperty:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                      minItems: 1
                    pacTitle:
                      type: string
                    pacDescription:
                      type: string
                    pacLink:
                      type: string
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '204':
          description: No Content
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/properties/{propertyid}/phases/{nodename}':
    get:
      summary: "Phase â€”\_Single Phase Detail"
      description: |
        Returns a specific place for a specific property.

        **EXAMPLE ENDPOINT:**

        https://api.vistana.com/dcm/v1/oauth/properties/svv/places/international-airport
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: path
          name: nodename
          type: string
          required: true
          description: |
            AKA Detail. This parameter gives you the full detail of a specific
            amenity.
            - **Pattern:** `^[-0-9A-Za-z]+$`
            - **Case:** Insensitive
            - **Example:** international-airport
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    icon:
                      type: string
                    fullAddress:
                      type: string
                    referenceProperty:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                      minItems: 1
                    description:
                      type: string
                    featured:
                      type: boolean
                    priority:
                      type: string
                    priorityOverride:
                      type: string
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/properties/{propertyid}/villas':
    get:
      summary: "Villas â€”\_All"
      description: |
        Returns all villas for a specific property.

        **EXAMPLE ENDPOINT:**

        https://api.vistana.com/dcm/v1/oauth/properties/wkorv/villas
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: limit
          type: string
          description: 'Set **?limit={integer}** to limit the number of results of a request. This is useful for pagination.'
        - in: query
          name: offset
          type: string
          description: 'Set **?offset={integer}** to get results of a particular page/offset of a request. This is useful for pagination.'
        - in: query
          name: sort
          type: string
          description: 'Use **?sort={fieldName}** when you want to do a data field sort on a result set. This featured only works with non-object data.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    phase:
                      type: string
                    unit:
                      type: string
                    numberOfRooms:
                      type: string
                    squareFootage:
                      type: string
                    sleepingCapacity:
                      type: string
                    referenceProperty:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                      minItems: 1
                    description:
                      type: string
                    featured:
                      type: boolean
                    priority:
                      type: string
                    priorityOverride:
                      type: string
                    openGraphTitle:
                      type: string
                    openGraphDescription:
                      type: string
                    openGraphImage:
                      $ref: '#/definitions/images'
                    twitterTitle:
                      type: string
                    twitterDescription:
                      type: string
                    twitterImage:
                      $ref: '#/definitions/images'
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '204':
          description: No Content
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/properties/{propertyid}/villas/{nodename}':
    get:
      summary: "Villas â€”\_Single Villa Detail"
      description: "Returns specific villa information for a specific property.\n\n**EXAMPLE ENDPOINT:** \n\nhttps://api.vistana.com/dcm/v1/oauth/properties/svv/villas/studio-bedroom\n"
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: path
          name: nodename
          type: string
          required: true
          description: |
            AKA Detail. This parameter gives you the full detail of a specific villa.
            - **Pattern:** `^[-0-9A-Za-z]+$`
            - **Case:** Insensitive
            - **Example:** two-bedroom-lockoff
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      tags:
        - Properties
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    phase:
                      type: string
                    unit:
                      type: string
                    numberOfRooms:
                      type: string
                    squareFootage:
                      type: string
                    sleepingCapacity:
                      type: string
                    referenceProperty:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                      minItems: 1
                    description:
                      type: string
                    featured:
                      type: boolean
                    priority:
                      type: string
                    priorityOverride:
                      type: string
                    openGraphTitle:
                      type: string
                    openGraphDescription:
                      type: string
                    openGraphImage:
                      $ref: '#/definitions/images'
                    twitterTitle:
                      type: string
                    twitterDescription:
                      type: string
                    twitterImage:
                      $ref: '#/definitions/images'
                    images:
                      $ref: '#/definitions/images'
                    videos:
                      $ref: '#/definitions/videos'
                    documents:
                      $ref: '#/definitions/documents'
                    gallery:
                      $ref: '#/definitions/galleries'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  /vacation-ideas:
    get:
      summary: "Articles â€”\_All"
      description: "Returns a full \"vacation ideas\" object.\n\n**EXAMPLE ENDPOINT:** \n\nhttps://api.vistana.com/dcm/v1/oauth/vacation-ideas\n"
      parameters:
        - in: query
          name: limit
          type: integer
          required: false
          description: 'Set **?limit={integer}** to limit the number of results of a request. This is useful for pagination.'
        - in: query
          name: offset
          type: string
          description: 'Set **?offset={integer}** to get results of a particular page/offset of a request. This is useful for pagination.'
      tags:
        - Vacation Ideas
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    shortDescription:
                      type: string
                    awardLink:
                      type: string
                    openGraphTitle:
                      type: string
                    openGraphDescription:
                      type: string
                    openGraphImage:
                      $ref: '#/definitions/images'
                    twitterTitle:
                      type: string
                    twitterDescription:
                      type: string
                    twitterImage:
                      $ref: '#/definitions/images'
                    tags:
                      $ref: '#/definitions/ugctags'
                    images:
                      $ref: '#/definitions/image'
                    gallery:
                      $ref: '#/definitions/gallery'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/vacation-ideas/{tagnodename}':
    get:
      summary: "Articles â€”\_Single Article OR Articles Tag Search"
      description: "Returns either a tag response OR detail page for vacation ideas.\n\n**EXAMPLE ENDPOINT #1:** \n\nhttps://api.vistana.com/dcm/v1/oauth/vacation-ideas/wkorv,featured\n\n**EXAMPLE ENDPOINT #2:** \n\nhttps://api.vistana.com/dcm/v1/oauth/vacation-ideas/15-words-to-learn-before-visiting-hawaii\n"
      parameters:
        - in: path
          name: tagnodename
          type: string
          required: true
          description: |
            This endpoint accepts a "tag" query. You may query for multiple tags, too, with a comma-delimited list. The tag search performed is an "AND" search. For a full article description, you may hit the detail endpoint for a vacation idea article.
            - **Pattern:** `^[-0-9A-Za-z,]+$`
            - **Case:** Insensitive
            - **Example:** featured,wkorv
            - **Example:** 15-words-to-learn-before-visiting-hawaii
        - in: query
          name: limit
          type: integer
          required: false
          description: 'Set **?limit={integer}** to limit the number of results of a request. This is useful for pagination.'
        - in: query
          name: offset
          type: string
          description: 'Set **?offset={integer}** to get results of a particular page/offset of a request. This is useful for pagination.'
      tags:
        - Vacation Ideas
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    shortDescription:
                      type: string
                    awardLink:
                      type: string
                    openGraphTitle:
                      type: string
                    openGraphDescription:
                      type: string
                    openGraphImage:
                      $ref: '#/definitions/images'
                    twitterTitle:
                      type: string
                    twitterDescription:
                      type: string
                    twitterImage:
                      $ref: '#/definitions/images'
                    tags:
                      $ref: '#/definitions/ugctags'
                    images:
                      $ref: '#/definitions/image'
                    gallery:
                      $ref: '#/definitions/gallery'
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
  /ads:
    get:
      summary: Ads â€” All
      description: |
        Returns a full "ads" object.

        **EXAMPLE ENDPOINT:**

        https://api.vistana.com/dcm/v1/oauth/ads
      parameters:
        - in: query
          name: limit
          type: integer
          required: false
          description: 'Set **?limit={integer}** to limit the number of results of a request. This is useful for pagination.'
        - in: query
          name: offset
          type: string
          description: 'Set **?offset={integer}** to get results of a particular page/offset of a request. This is useful for pagination.'
        - in: query
          name: sort
          type: string
          description: 'Use **?sort={fieldName}** when you want to do a data field sort on a result set. This featured only works with non-object data.'
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
        - type: string
          in: header
          name: api_key
      tags:
        - Ads
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    url:
                      type: string
                    brand:
                      $ref: '#/definitions/brand'
                    placementId:
                      type: array
                      items:
                        type: object
                        properties:
                          nodename:
                            type: string
                    pillar:
                      type: array
                      items:
                        type: object
                        properties:
                          nodename:
                            type: string
                    mode:
                      type: array
                      items:
                        type: object
                        properties:
                          nodename:
                            type: string
                    referenceProperty:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                      minItems: 1
                    persona:
                      $ref: '#/definitions/persona'
                    priority:
                      type: string
                    priorityOverride:
                      type: string
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '204':
          description: No Content
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
  '/ads/{brand}/{placementid}/{mode}/{pillar}/{resortid}/{usertype}':
    get:
      summary: Ads â€” Single Detail
      description: |
        Returns a an ads detail object. Unfortunately, all parameters are required.

        **EXAMPLE ENDPOINT:**

        https://api.vistana.com/dcm/v1/oauth/ads/unbranded/pi1/pre-arrival/pillar/svv/owner
      parameters:
        - in: path
          name: brand
          type: string
          required: true
        - in: path
          name: placementid
          type: integer
          required: true
        - in: path
          name: mode
          type: string
          required: true
        - in: path
          name: pillar
          type: string
          required: true
        - in: path
          name: resortid
          type: string
          required: true
        - in: path
          name: usertype
          type: string
          required: true
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: limit
          type: string
          description: 'Set **?limit={integer}** to limit the number of results of a request. This is useful for pagination.'
        - in: query
          name: offset
          type: string
          description: 'Set **?offset={integer}** to get results of a particular page/offset of a request. This is useful for pagination.'
        - in: query
          name: sort
          type: string
          description: 'Use **?sort={fieldName}** when you want to do a data field sort on a result set. This featured only works with non-object data.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
        - type: string
          in: header
          name: api_key
      tags:
        - Ads
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    resourceId:
                      type: string
                    name:
                      type: string
                    url:
                      type: string
                    brand:
                      $ref: '#/definitions/brand'
                    placementId:
                      type: array
                      items:
                        type: object
                        properties:
                          nodename:
                            type: string
                    pillar:
                      type: array
                      items:
                        type: object
                        properties:
                          nodename:
                            type: string
                    mode:
                      type: array
                      items:
                        type: object
                        properties:
                          nodename:
                            type: string
                    referenceProperty:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                      minItems: 1
                    persona:
                      $ref: '#/definitions/persona'
                    priority:
                      type: string
                    priorityOverride:
                      type: string
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      produces:
        - application/json
      operationId: ''
  '/properties/{propertyid}/events':
    get:
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    eventAllDay:
                      type: string
                    eventSort:
                      type: string
                    eventTime:
                      type: string
                    eventUuid:
                      type: string
                    eventDate:
                      type: string
                    referenceProperty:
                      type: array
                      items:
                        type: string
                    event:
                      $ref: '#/definitions/event'
                    created:
                      type: string
                    lastModified:
                      type: string
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '204':
          description: No Content
          schema: {}
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      description: |
        Returns as event set.

        **EXAMPLE ENDPOINT:**

        https://api.vistana.com/dcm/v1/oauth/properties/svv/events
      summary: "Events â€”\_7-Day Event List"
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: limit
          type: string
          description: 'Set **?limit={integer}** to limit the number of results of a request. This is useful for pagination.'
        - in: query
          name: offset
          type: string
          description: 'Set **?offset={integer}** to get results of a particular page/offset of a request. This is useful for pagination.'
        - in: query
          name: sort
          type: string
          description: 'Use **?sort={fieldName}** when you want to do a data field sort on a result set. This featured only works with non-object data.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
        - type: string
          in: header
      produces:
        - application/json
      tags:
        - Properties
  '/properties/{propertyid}/events/{daterange}':
    get:
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              metas:
                type: object
                properties:
                  count:
                    type: integer
                  content:
                    type: string
                  type:
                    type: string
                  status:
                    type: integer
              success:
                type: boolean
              data:
                type: array
                items:
                  type: object
                  properties:
                    nodename:
                      type: string
                    eventAllDay:
                      type: string
                    eventSort:
                      type: string
                    eventTime:
                      type: string
                    eventUuid:
                      type: string
                    eventDate:
                      type: string
                    referenceProperty:
                      type: array
                      items:
                        type: string
                    event:
                      $ref: '#/definitions/event'
                    created:
                      type: string
                    lastModified:
                      type: string
          headers:
            Cache-Control:
              type: string
              default: 'public, max-age=86400'
        '404':
          description: Not Found
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
        '500':
          description: Internal Server Error
          headers:
            Cache-Control:
              type: string
              default: 'no-cache, no-store, must-revalidate'
      summary: Events â€” Date Ranged Event List
      description: |
        Returns as event set based on a specific date range. Including a single date will return only a single day.

        **EXAMPLE ENDPOINTS:**

        https://api.vistana.com/dcm/v1/oauth/properties/svv/events/20190301

        https://api.vistana.com/dcm/v1/oauth/properties/svv/events/20190301-20190331
      parameters:
        - in: path
          name: propertyid
          type: string
          required: true
          description: |-
            A "propertyid" can be many things:

            1. A Vistana property code (string): code
            2. A Starwood property id (integer): propertyID
            3. A Sun sysytem id: propertyIDSun
            4. A Marriott MARSHA code: marshaCode

            In the case of the code or propertyIDSun, since these are common, there are convenienecs built in to the API where you only need to use the values: /svv or /15.

            In the case of the propertyID or marshaCode, the syntax for use is /propertyID: 5607 or /marshaCode:MCOLS

            You may also use the specific key value for all queries, /code:svv, /propertyID:5607, /propertyIDSun:15, /marshaCode:MCOLS
        - in: path
          name: daterange
          type: string
          required: true
          description: |-
            Date range syntax is as follows:

            * YYYYMMDD
            * YYYYMMDD-YYYYMMDD
        - in: query
          name: metas-only
          type: string
          description: 'Set **?metas-only=true** to get a light response that includes only the response meta info. This is particularly useful for getting an endpoint count without the full data payload.'
        - in: query
          name: limit
          type: string
          description: 'Set **?limit={integer}** to limit the number of results of a request. This is useful for pagination.'
        - in: query
          name: offset
          type: string
          description: 'Set **?offset={integer}** to get results of a particular page/offset of a request. This is useful for pagination.'
        - in: query
          name: sort
          type: string
          description: 'Use **?sort={fieldName}** when you want to do a data field sort on a result set. This featured only works with non-object data.'
        - in: query
          name: list
          type: string
          description: 'Use **?list={fieldName}** when you would like the response to return only the values of a certain field. This is useful when you would like to get a list of, say, article titles for a blog. This featured only works with non-object data.'
      produces:
        - application/json
      tags:
        - Properties
  /rooms:
    get:
      summary: Rooms
      responses: {}
      operationId: get-rooms
      tags:
        - Rooms
  /content:
    get:
      summary: Content
      tags:
        - Content
      responses: {}
      operationId: get-content
  /refs:
    get:
      summary: Refs
      tags:
        - Refs
      responses: {}
      operationId: get-refs
definitions:
  ugctags:
    type: array
    items:
      type: string
    uniqueItems: true
    minItems: 1
    maxItems: 10
  persona:
    type: array
    items:
      type: string
    uniqueItems: true
    minItems: 1
    maxItems: 4
  locale:
    type: object
    properties:
      nodename:
        type: string
      name:
        type: string
      icon:
        type: string
      description:
        type: string
      featured:
        type: boolean
      ugcTags:
        $ref: '#/definitions/ugctags'
      images:
        $ref: '#/definitions/images'
      videos:
        $ref: '#/definitions/videos'
      documents:
        $ref: '#/definitions/documents'
      galleries:
        $ref: '#/definitions/galleries'
  recommendations:
    type: array
    items:
      type: object
      properties:
        nodename:
          type: string
        name:
          type: string
        shortDescription:
          type: string
        referenceStaff:
          $ref: '#/definitions/referenceStaff'
        type:
          type: object
          properties:
            nodename:
              type: string
            name:
              type: string
  referenceStaff:
    type: array
    items:
      type: object
      properties:
        nodename:
          type: string
        name:
          type: string
        referenceID:
          type: string
        nameFirst:
          type: string
        nameLast:
          type: string
        title:
          type: string
        phone:
          type: string
        email:
          type: string
        description:
          type: string
        images:
          $ref: '#/definitions/images'
        videos:
          $ref: '#/definitions/videos'
        documents:
          $ref: '#/definitions/documents'
        galleries:
          $ref: '#/definitions/galleries'
  brand:
    type: object
    properties:
      nodename:
        type: string
      name:
        type: string
      description:
        type: string
      featured:
        type: boolean
      images:
        $ref: '#/definitions/images'
      videos:
        $ref: '#/definitions/videos'
      documents:
        $ref: '#/definitions/documents'
      galleries:
        $ref: '#/definitions/galleries'
  image:
    type: object
    properties:
      nodename:
        type: string
      name:
        type: string
      path:
        type: string
      description:
        type: string
      priority:
        type: string
      override:
        type: string
      featured:
        type: boolean
      referenceID:
        type: string
      taglist:
        $ref: '#/definitions/ugctags'
  images:
    type: array
    items:
      type: object
      properties:
        nodename:
          type: string
        name:
          type: string
        path:
          type: string
        description:
          type: string
        priority:
          type: string
        override:
          type: string
        featured:
          type: boolean
        referenceID:
          type: string
        taglist:
          $ref: '#/definitions/ugctags'
  videos:
    type: array
    items:
      type: object
      properties:
        nodename:
          type: string
        name:
          type: string
        description:
          type: string
        externalRefId:
          type: string
        videoService:
          type: string
        priority:
          type: string
        override:
          type: string
        featured:
          type: boolean
        referenceID:
          type: string
        taglist:
          $ref: '#/definitions/ugctags'
  documents:
    type: array
    items:
      type: object
      properties:
        nodename:
          type: string
        name:
          type: string
        path:
          type: string
        description:
          type: string
        priority:
          type: string
        override:
          type: string
        featured:
          type: boolean
        referenceID:
          type: string
        taglist:
          type: array
          items: {}
        persona:
          $ref: '#/definitions/persona'
  galleries:
    type: array
    items:
      type: object
      properties:
        nodename:
          type: string
        name:
          type: string
        path:
          type: string
        description:
          type: string
        referenceID:
          type: string
        taglist:
          type: array
          items: {}
        videos:
          $ref: '#/definitions/videos'
        images:
          $ref: '#/definitions/images'
  gallery:
    type: object
    properties:
      nodename:
        type: string
      name:
        type: string
      path:
        type: string
      description:
        type: string
      referenceID:
        type: string
      taglist:
        type: array
        items: {}
      videos:
        $ref: '#/definitions/videos'
      images:
        $ref: '#/definitions/images'
  marriott:
    type: object
    properties:
      accessibility:
        type: object
        properties:
          accessibleGuestRoom:
            type: array
            items:
              type: string
          accessiblePublicSpaces:
            type: array
            items:
              type: string
      policies:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            infoList:
              type: array
              items:
                type: string
      announcements:
        type: array
        items:
          type: object
          properties:
            text:
              type: string
            title:
              type: string
            effectiveDate:
              type: string
            expirationDate:
              type: string
  event:
    type: array
    items:
      type: object
      properties:
        nodename:
          type: string
        resourceId:
          type: string
        name:
          type: string
        description:
          type: string
        disclaimer:
          type: string
        datetimeAllDayEvent:
          type: boolean
        datetimeStartDate:
          type: string
        datetimeEndDate:
          type: string
        datetimeStartTime:
          type: string
        datetimeStartTimeInSeconds:
          type: string
        datetimeEndTime:
          type: string
        datetimeEndTimeInSeconds:
          type: string
        priceComplimentary:
          type: string
        priceCost:
          type: string
        priceTax:
          type: string
        contactEmail:
          type: string
        contactName:
          type: string
        contactExtension:
          type: string
        contactPhone:
          type: string
        contactLocation:
          type: string
        created:
          type: string
        lastModified:
          type: string
        referenceIcon:
          type: object
          properties:
            nodename:
              type: string
            code:
              type: string
            created:
              type: string
            name:
              type: string
            lastModified:
              type: string
        eventReferenceProperty:
          type: array
          items:
            type: string
        referenceImage:
          $ref: '#/definitions/image'
parameters: {}
tags:
  - name: properties
